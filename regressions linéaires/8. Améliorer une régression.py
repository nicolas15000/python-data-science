
import numpy as np   
import matplotlib.pyplot as plt   
from sklearn.datasets import make_regression  
from sklearn.linear_model import SGDRegressor 


# Cr√©er un Dataset 
np.random.seed(0)   
x, y = make_regression(n_samples=100, n_features=1, noise=10)   
plt.scatter(x, y)
plt.show()

# D√©velopper le mod√®le et l‚Äôentra√Æner 
model = SGDRegressor(max_iter=100, eta0=0.0001)   
model.fit(x,y)   
print('Coeff R2 =', model.score(x, y))   
plt.scatter(x, y)   
plt.plot(x, model.predict(x), c='red', lw = 3) 
plt.show()

# Re-D√©velopper le mod√®le et l‚Äôentra√Æner afin d'obtenir une meilleure r√©gression lin√©aire .
model = SGDRegressor(max_iter=1000, eta0=0.001)   
model.fit(x,y)   
print('Coeff R2 =', model.score(x, y))   
plt.scatter(x, y)   
plt.plot(x, model.predict(x), c='red', lw = 3) 
plt.show()

# ùëÖ2 = 94%


# Pour rappel: la m√©thode la plus simple pour r√©aliser une r√©gression est d√©crite dans le num√©ro 3