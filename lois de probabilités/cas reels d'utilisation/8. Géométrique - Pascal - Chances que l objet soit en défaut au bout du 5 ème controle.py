""" 
    NOTE *** FAUX *** EN COURS DETUDE
    
    Loi géométrique ou de pascal - Python géométric law with numpy

    https://docs.scipy.org/doc/numpy-1.10.1/reference/generated/numpy.random.geometric.html


 """

 # Import des librairies
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Problème : 
"""  
Les produits fabriqués par une machine ont un taux de défectueux de 3%. 

Quelle est la probabilité que les premiers oc-curs défectueux du cinquième élément soient inspectés?

"""

result = np.random.geometric(p=0.03, size=1000)
print(result);

#   Dans ce tableau, on a obtenu un produit defectueux lors du 31ème controle, du 20ème , du 37 ème   etc ...

""" [ 31  20  37   9  47  31  22   7  44  15  52  15   4  14  36  45  26  27
   9  48  30   5   7  17   7  24 121  22  23  49   2  26  25   8   4   5
   3  27  70  71   3   1  19  22 103  18  14  20  34  45   8 169  11  63
  29  71  30  79  75  19  56   9   5   8  15  44   8  12  40  29  46   2
 144  69  65   1   4  90  20 187 100  52  46  76   3 105  12 110  31   3
 113  18   6  15 127  22   6   7   3  18 123  41  69 104  13  18   2   8
  52  35  54  27  74  22  31  27   3  15  21  26  13   3  32  10 131  20
  21  98  50   7 169  15   8  27  18  18  23  24   8  34  11  11  87  12
   6  58  12  19   9  23  19   3  19  64  29 124  72   9  94  29  31  37
  31   3  22  60  27  30  14   6  26   4  65 115   7   3  37   6  41   3
  38  13   2  14  11  14   6  12  13  44   1   4  32   2   8  13   7   9
  64  30  25  17  14  13  85  36  53   8  22   9  24  14  34  21  17  16
  38  29   4 103  79  18   2  11   4  14  19  32 107  10   4  27  15  23
   6  21  26  12  63   5   2  11   1  72  97  48  42  62   1   1  15   7
  12  11   5   3  29  50  32  61  12  56  23 137  18  27  30  36  41  29
  16  14  53  68   9  22  74  50  11   5  50   3  58   8  17  90  12  52
  16  16  47  10  37  28  30  44  10   7  23  33 111  20  99  39   3 113
  34  20  28  45   8  19   2  18   7  12  32  10  20   1  31  24  20  26
  46  14  11  16 129  41   2   6  98 153   6  79 124   5  36  88  59 116
  20 173  16  12  63  88  23  14  88   3  99   9  29   5   4 124   1   9
  27  86  11 151  17   1  18 146 175  14  34  81  44   4  51  12  37  76
  31  59  14  34  84  13   4  46   1  10  33  14 119  31  71   6  76  58
  18  91  51  51  14   9   7 108   2   6  27   6  30  33  19  37  10  13
  49  67  14  28  71  59 138   3  41  12  17  34  24   1   6  48  30  31
  18  60  59  42   3  50  15   3   4  24  61   9  44  55  30  14  43  85
 140  19  35  47  21  46   8  14   4   2  73   5   3  64   2  29   1  36
  52  15   7  40  40   1  33  16  21   8  48   2  47 107  12   9  15  23
  18   9  78  54  36 235   2  42  43  12  15   4  21  11  38  25   2  17
   5  45  25  27  19   7  41   4 115   9 139  43  35  56   5   6   8  16
  23 104  25   1  55  13 115  61  13 105  33  20   1  11   8  87  20 113
   7  40  37 122  15  13  25  32   1   3  18 119  23   7  30  34  14  89
  70  43  23  12  32  47  31  30  33  14  43  50   6  31  52  61  25   8
   7   3  12   5  24  19  58  13  13  13 161  44  33  59 130  90  30  24
  26   4  48  34  36  98  22   6  28   7  16  16  24  39  90  39  37   1
  42  57  16  25  27  10  33   1  17  12  18   2  18  22  57  28  17  25
  10   1   9  46   4  15  52  22  16  18  27  15 136  16  21 194  22   2
   3  29  23   2  20  24   7 115  59  80  31  11  18  62   6   1   9  69
  92  90  41   6   1  12  23  12   6 111 131   3   2  33  17  34   6  62
  66  27  43   7  18   5   8  13  48  34   6  43 148   3   3  37  12   6
  25  28   7  12  86  27  15  69  12  11  15  42   6   5   9   8  12  36
  17  30  38  43  82  25  24   5   6  12  12   4  14  17   7  16   4  43
   3  27  28  13  81  11  40  34  28  19   2  22  11  26  76   9  17  13
  73  17   8  14  72   9  19  41  12  78  13  95  24   8  13  19  20  85
  39   2 100  52  25   3  32  31  43  32  11   6  30  71  19   6  31  25
   1  55  11  58   2   7  21   8   7  17   7  12  37  22   3  76  35   3
  28   1 106  46  20 199  18  37  28  21   6   2  10  14  78  11  27  31
   2  91  32  11  22   7   6   5  56  13  58  55  28   9   4 131  89  45
  37  70  61  35  23  35  23  11  20  35  37   7  10  33   3  18   7   7
  22 111  40   3  62 121  91  10  39   2  17  42  39   5  39  54  48  39
   6  22   9  51  75  28  57  26 190  34  66  33  57  42  10  90  26   8
  25  16  16  31  17  68  53  31   2 100  21  47  17  10  18  28   4   8
  54  17   2  20  61  10   7   3  15  18   2  62  27  46  28   9  10   1
  67  44  87  65  12   8  28  61  53  60   7  37   4  16  68  11  16   4
   8   7   5  45   3  87  54 112 170  14  75   1  71   6  19 107 114  49
  75  43  27  21  52  21  35  38  22  50 166  30  72  56  43  71  78  41
   6  21  18  15  10   7  56  17  49  29]"""

# Essayons désormais de voir le pourcentage de malchance d'obtenir un produitr defectueux au bout de la 5 ème fois
result =  (result == 5).sum() / 1000.
print(result * 1000,"%");
